name: wheels for musllinux

on:
  push:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker-image: quay.io/pypa/musllinux_1_1_aarch64
            platform: musllinux_1_1_aarch64
            qemu: true
            pre-cmd: ""
    steps:
      - name: Set up QEMU
        if: ${{matrix.qemu == true}}
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build wheels
        uses: addnab/docker-run-action@v3 # https://aschmelyun.com/blog/using-docker-run-inside-of-github-actions/
        with:
          image: ${{matrix.docker-image}}
          options: -v ${{ github.workspace }}:/io -e PLAT=${{ matrix.platform }}
          run: |
            uname -m
            cd /io; ls -al
            ${{ matrix.pre-cmd }} sh build_wheels.sh
            ls wheelhouse/
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          rust-toolchain: nightly
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --out dist --no-sdist
      - name: Python UnitTest
        if: matrix.target == 'x86_64'
        run: |
          pip install py-ed25519-bindings --no-index --find-links dist --force-reinstall
          pip install -r requirements.txt
          pip install pytest
          pytest tests.py
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: wheel
