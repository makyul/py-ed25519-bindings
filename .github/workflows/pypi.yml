name: wheels for musllinux

on:
  push:
jobs:
  build_wheels:
    name: Build ${{ matrix.build }}${{ matrix.arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            arch: "aarch64"
            build: "musllinux_"
            use_qemu: true

    steps:
      - uses: actions/checkout@v2
        if: (!matrix.use_qemu) || fromJSON(env.USE_QEMU)
        with:
          fetch-depth: 0  # required for versioneer to find tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
        if: matrix.use_qemu && fromJSON(env.USE_QEMU)

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
          
      - name: Build
        run: cargo build --release
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        if: (!matrix.use_qemu) || fromJSON(env.USE_QEMU)
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"
          CIBW_BUILD: "cp39-${{ matrix.build }}*"

      - uses: actions/upload-artifact@v3
        if: (!matrix.use_qemu) || fromJSON(env.USE_QEMU)
        with:
          path: ./*.whl
